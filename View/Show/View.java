/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.Show;


import Controller.Show.*;
import Model.*;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;

/**
 *
 * @author doriane kaffo
 */
public class View extends javax.swing.JPanel {

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addAnimation;
    private javax.swing.JComboBox choiceAnimation;
    private javax.swing.JLabel dateEvenement;
    private javax.swing.JLabel designationEvenement;
    private javax.swing.JButton imprimer;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton modifierEvent;
    private javax.swing.JLabel nombreEvenement;
    private javax.swing.JPanel panelEvenement;
    private javax.swing.JComboBox selectAnimaux;
    private javax.swing.JComboBox selectIntervenant;
    private javax.swing.JComboBox selectPersonne;
    private javax.swing.JButton supprimerEvenement;
    // End of variables declaration//GEN-END:variables
    private int io = 0;
    private String TypeLast = "";
    private DBInteraction query = null;
    private EventTypeController eventTypeCtrl = null;
    private EventController eventCtrl = null;
    private IntervenantEventController intervenantCtrl = null;
    private AnimalEventController animalEventCtrl = null;
    private PersonneEventController personneEventCtrl = null;
    int col=0,row=0;
    /**
     * Creates new form view
     */
    public View() {
        initComponents();
        eventTypeCtrl = new EventTypeController();
        eventCtrl = new EventController();
        intervenantCtrl = new IntervenantEventController();
        animalEventCtrl = new AnimalEventController();
       personneEventCtrl = new PersonneEventController();
        try {
            query = new DBInteraction();
        } catch (ExceptionDataBase exceptionDataBase) {
            exceptionDataBase.printStackTrace();
        }
        (new Thread(new Runnable() {
            @Override
            public void run() {
                initValue();
            }
        })).start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="component code">
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        choiceAnimation = new javax.swing.JComboBox();
        addAnimation = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        imprimer = new javax.swing.JButton();
        panelEvenement = new javax.swing.JPanel();
        modifierEvent = new javax.swing.JButton();
        supprimerEvenement = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        dateEvenement = new javax.swing.JLabel();
        designationEvenement = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        selectIntervenant = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        selectPersonne = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        selectAnimaux = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        nombreEvenement = new javax.swing.JLabel();

        jLabel1.setText("Choix de l'animation :");

        choiceAnimation.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Chargement..." }));
        choiceAnimation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choiceAnimationActionPerformed(evt);
            }
        });

        addAnimation.setText("Ajouter une Animation");
        addAnimation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAnimationActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                        {null, null, null},
                        {null, null, null},
                        {null, null, null},
                        {null, null, null},
                        {null, null, null},
                        {null, null, null},
                        {null, null, null},
                        {null, null, null},
                        {null, null, null},
                        {null, null, null},
                        {null, null, null},
                        {null, null, null},
                        {null, null, null},
                        {null, null, null},
                        {null, null, null},
                        {null, null, null},
                        {null, null, null},
                        {null, null, null},
                        {null, null, null},
                        {null, null, null},
                        {null, null, null},
                        {null, null, null},
                        {null, null, null},
                        {null, null, null},
                        {null, null, null},
                        {null, null, null},
                        {null, null, null},
                        {null, null, null},
                        {null, null, null}
                },
                new String [] {
                        "Planning", "Personnel", "Animaux"
                }
        ) {
            Class[] types = new Class [] {
                    java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                    false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTable1PropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Ajouter une date a l'animation");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        imprimer.setText("Imprimer");

        modifierEvent.setText("Modifier");
        modifierEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierEventActionPerformed(evt);
            }
        });

        supprimerEvenement.setBackground(new java.awt.Color(240, 4, 4));
        supprimerEvenement.setText("Supprimer");
        supprimerEvenement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerEvenementActionPerformed(evt);
            }
        });

        jLabel2.setText("Type Evenement :");

        jLabel3.setFont(new java.awt.Font("Teacher Sez", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Non Specifiee");

        jLabel4.setText("Date de programmation : ");

        dateEvenement.setText("0000/00/00");

        designationEvenement.setText("Description:");

        jTextArea1.setBackground(new java.awt.Color(247, 243, 243));
        jTextArea1.setColumns(20);
        jTextArea1.setForeground(new java.awt.Color(102, 102, 102));
        jTextArea1.setRows(5);
        jTextArea1.setText("...");
        jScrollPane2.setViewportView(jTextArea1);

        jLabel5.setText("Intervenants / Entreprises");

        selectIntervenant.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Chargement..." }));

        jLabel6.setText("Personnes / Employes");

        selectPersonne.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Chargement..." }));

        jLabel7.setText("Animaux");

        selectAnimaux.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Chargement..." }));

        jLabel8.setText("Infrastructures");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Chargement..." }));

        javax.swing.GroupLayout panelEvenementLayout = new javax.swing.GroupLayout(panelEvenement);
        panelEvenement.setLayout(panelEvenementLayout);
        panelEvenementLayout.setHorizontalGroup(
                panelEvenementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelEvenementLayout.createSequentialGroup()
                                .addGroup(panelEvenementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(panelEvenementLayout.createSequentialGroup()
                                                .addGap(19, 19, 19)
                                                .addGroup(panelEvenementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(panelEvenementLayout.createSequentialGroup()
                                                                .addComponent(jLabel2)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                        .addGroup(panelEvenementLayout.createSequentialGroup()
                                                                .addGap(4, 4, 4)
                                                                .addGroup(panelEvenementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                        .addComponent(selectIntervenant, 0, 269, Short.MAX_VALUE)
                                                                        .addGroup(panelEvenementLayout.createSequentialGroup()
                                                                                .addComponent(jLabel4)
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addComponent(dateEvenement))
                                                                        .addComponent(selectAnimaux, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(selectPersonne, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                                .addGap(0, 0, Short.MAX_VALUE))))
                                        .addComponent(jScrollPane2)
                                        .addGroup(panelEvenementLayout.createSequentialGroup()
                                                .addGroup(panelEvenementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(panelEvenementLayout.createSequentialGroup()
                                                                .addContainerGap()
                                                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(panelEvenementLayout.createSequentialGroup()
                                                                .addGap(70, 70, 70)
                                                                .addComponent(jLabel5))
                                                        .addGroup(panelEvenementLayout.createSequentialGroup()
                                                                .addGap(77, 77, 77)
                                                                .addComponent(jLabel6))
                                                        .addGroup(panelEvenementLayout.createSequentialGroup()
                                                                .addGap(107, 107, 107)
                                                                .addGroup(panelEvenementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jLabel7)
                                                                        .addComponent(designationEvenement)
                                                                        .addComponent(jLabel8))))
                                                .addGap(0, 15, Short.MAX_VALUE))
                                        .addGroup(panelEvenementLayout.createSequentialGroup()
                                                .addComponent(modifierEvent)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(supprimerEvenement)))
                                .addContainerGap())
        );
        panelEvenementLayout.setVerticalGroup(
                panelEvenementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelEvenementLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(panelEvenementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3))
                                .addGap(3, 3, 3)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(5, 5, 5)
                                .addGroup(panelEvenementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel4)
                                        .addComponent(dateEvenement))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(selectIntervenant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel6)
                                .addGap(11, 11, 11)
                                .addComponent(selectPersonne, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(selectAnimaux, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel8)
                                .addGap(4, 4, 4)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(designationEvenement)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addGroup(panelEvenementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(modifierEvent)
                                        .addComponent(supprimerEvenement))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        nombreEvenement.setText("0/0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 587, Short.MAX_VALUE)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(choiceAnimation, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(30, 30, 30)
                                                .addComponent(imprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(addAnimation, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(nombreEvenement)
                                                .addGap(172, 172, 172)
                                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGap(199, 199, 199)))
                                .addGap(18, 18, 18)
                                .addComponent(panelEvenement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(20, 20, 20)
                                                .addComponent(panelEvenement, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addGap(16, 16, 16)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel1)
                                                        .addComponent(choiceAnimation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(addAnimation)
                                                        .addComponent(imprimer))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 455, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(nombreEvenement)
                                                        .addComponent(jButton1))
                                                .addGap(4, 4, 4)))
                                .addContainerGap())
        );
    }// </editor-fold>

    /*
        Add a new event
     */
    private void addAnimationActionPerformed(java.awt.event.ActionEvent evt) {
        final JDialog dg = new JDialog();
        dg.setTitle("Ajouter une animation");
        dg.setSize(new Dimension(410,150));
        final DialogNewAnimation pan = new DialogNewAnimation();
        dg.setLocation(300+this.getWidth()/2 - dg.getWidth()/2, 20+this.getHeight()/2 - dg.getHeight()/2);
        dg.add(pan);
        dg.setResizable(false);
        dg.setVisible(true);
        ActionListener n = new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                String txt = pan.getjTextField1().getText();
                int c = choiceAnimation.getModel().getSize();
                String lst = "";
                //choiceAnimation.addItem(txt);
                System.out.println("Ajout du type evenement "+txt);
                if(eventTypeCtrl.save(txt)) {
                    TypeLast = txt;
                    new JOptionPane().showMessageDialog(null, "Enregistrement de "+txt+" a reussie", "Warning",
                            JOptionPane.INFORMATION_MESSAGE);
                    initValue();
                    dg.setVisible(false);
                }else{
                    new JOptionPane().showMessageDialog(null, "Enregistrement de "+txt+" a echoue", "Warning",
                            JOptionPane.INFORMATION_MESSAGE);
                }
                
            }
        
        };
        ActionListener n2 = new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                dg.setVisible(false);
            }

        };
        pan.getjToggleButton1().addActionListener(n);
        pan.getjToggleButton2().addActionListener(n2);
    }
    /**
     * MODIFIER L ELEMENT
     * @param evt
     */
    private void modifierEventActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }
    /**
     * SUPPRIMER L ELEMENT
     * @param evt
     */
    private void supprimerEvenementActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }
    /*
    ADD EVENT
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        if(TypeLast.length()<2){
            JOptionPane bg = new JOptionPane();
            bg.showMessageDialog(this, "Il faut choisir un type d evenement", "Erreur",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        final JDialog dg = new JDialog();
        dg.setTitle("Planifier une animation");
        dg.setSize(new Dimension(900,650));
        final DialogNewAnimationPlaning pan = new DialogNewAnimationPlaning();
        pan.initValues(null,new TypeEvenement(TypeLast));
        dg.setLocation(140, 80);
        dg.getContentPane().add(pan);
        dg.setVisible(true);
        ActionListener n = new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                dg.setVisible(false);
            }
        };
        ActionListener n2 = new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                dg.setVisible(false);
            }
        };
        pan.getAddButton().addActionListener(n);
        pan.getCancelButton().addActionListener(n2);
    }

    private void choiceAnimationActionPerformed(java.awt.event.ActionEvent evt) {
        String c = choiceAnimation.getSelectedItem().toString();
        if(c.equalsIgnoreCase("Tout"))
            this.TypeLast = "";
        else
            this.TypeLast = c;
        this.initValue();
    }

    private void jTable1PropertyChange(java.beans.PropertyChangeEvent evt) {
        
        System.out.println("change property "+evt.getPropertyName());
    }


    private void initValue() {
        jTable1 = new javax.swing.JTable();
        jTable1.removeFocusListener(null);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                        {"Chargement...", "Chargement...", "Chargement..."}
                },
                new String [] {
                        "Planning", "Personnel", "Animaux"
                }
        ) {
            Class[] types = new Class [] {
                    java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                    false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        this.modifierEvent.setVisible(false);
        this.supprimerEvenement.setVisible(false);
        ArrayList<String> listType = null;
        listType = eventTypeCtrl.selAll();
        String[] listeAnim = new String[listType.size()+1];
        
        listeAnim[0] = "Tout";
        for(int i=1;i<listType.size()+1;i++){
            listeAnim[i] = listType.get(i-1);
        }
        choiceAnimation.setModel(new javax.swing.DefaultComboBoxModel(listeAnim));
        if(this.TypeLast.length()>0)
            choiceAnimation.setSelectedItem(this.TypeLast);

        ArrayList<Evenement> list = null;
        if(this.TypeLast.length()>0) {
            list = eventCtrl.selAllByEventType(this.TypeLast);
        }else {
                    list = new ArrayList<Evenement>();
                    for (String evT : listeAnim){
                        ArrayList<Evenement> c = eventCtrl.selAllByEventType(evT);
                        for(Evenement evt : c){
                            list.add(evt);
                        }
                    }
        }
        this.jLabel3.setText(TypeLast);
        this.nombreEvenement.setText(list.size()+" Evenements");
        final Object[][] content1 = new Object[list.size()][];
        //System.out.print(list.size()+"   --   ");
        for(int i=0;i<list.size();i++){
            //System.out.println(list.get(i));
            ArrayList<Animal> lstAn = animalEventCtrl.selAllByEventId(list.get(i).getId());

            String anim = "";
            if(lstAn.size()==0) {
                System.out.println("ANIMAUX NONE "+list.get(i).getId());
                anim = "none";
            }
            int indent = 0, N = lstAn.size();
            for (Animal a:lstAn){
                indent++;
                anim+=a.getNom()+" ("+a.getNomCommun()+") ";
                if(indent<N)
                    anim +=",";
            }
            String pers = "";
            ArrayList<Personne> lstPr =  personneEventCtrl.selAllByEventId(list.get(i).getId());
            if(lstPr.size()==0)
                pers = "none";
            indent = 0;
            N = lstPr.size();
            for (Personne a:lstPr){
                indent++;
                pers+=a.getPrenom()+"  "+a.getNom()+" ";
                if(indent<N)
                    pers +=",";
            }
            content1[i]=(new Object[]{list.get(i).getDate(),pers,anim});
        }
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                content1
            ,
            new String [] {
                "Planning", "Personnel", "Animaux"
            }
        ));

        ArrayList<Evenement> finalList = list;

        ActionListener MS1 = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String name = jTable1.getColumnName(col);
               // System.out.println("Column index selected " + row + " " + col + " " + name);
                final JDialog dg = new JDialog();
                dg.setTitle("Modifier une plannification");
                dg.setSize(new Dimension(900,650));
                final DialogNewAnimationPlaning pan = new DialogNewAnimationPlaning();
                pan.initValues(finalList.get(row),new TypeEvenement(TypeLast));
                dg.setLocation(140, 80);
                dg.getContentPane().add(pan);
                dg.setVisible(true);
                ActionListener n = new ActionListener(){
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        dg.setVisible(false);
                    }
                };
                ActionListener n2 = new ActionListener(){
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        dg.setVisible(false);
                    }
                };
                pan.getAddButton().addActionListener(n);
                pan.getCancelButton().addActionListener(n2);
            }
        };
        MouseAdapter MS2 = new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                col = jTable1.columnAtPoint(e.getPoint());
                row = jTable1.rowAtPoint(e.getPoint());
                String name = jTable1.getColumnName(col);
                Evenement evtn = finalList.get(row);
                System.out.println(jTable1.getValueAt(row,1));
                selectAnimaux.setModel(new javax.swing.DefaultComboBoxModel(jTable1.getValueAt(row,2).toString().split(",")));
                selectPersonne.setModel(new javax.swing.DefaultComboBoxModel(jTable1.getValueAt(row,1).toString().split(",")));
                jLabel3.setText(evtn.getType());
                dateEvenement.setText(evtn.getDate().toString());
                jTextArea1.setText(evtn.getDescription());
                modifierEvent.setVisible(true);
                supprimerEvenement.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        boolean supp = eventCtrl.delById(evtn.getId());
                        if(supp){
                            JOptionPane bg = new JOptionPane();
                            bg.showMessageDialog(null, "L evenement a ete supprime", "Supprimer evenement",
                                    JOptionPane.INFORMATION_MESSAGE);
                        }else {

                            JOptionPane bg = new JOptionPane();
                            bg.showMessageDialog(null, "La suppression a echoué, verifier que les relations sont toutes supprimees", "Supprimer evenement",
                                    JOptionPane.ERROR_MESSAGE);
                        }
                    }
                });
                modifierEvent.addActionListener(MS1);
                supprimerEvenement.setVisible(true);
                (new Thread(new Runnable() {
                    @Override
                    public void run() {
                        ArrayList<Intervenant> interv = intervenantCtrl.selAllByEventId(evtn.getId());
                        String intE = "";
                        for(Intervenant intTmp : interv)
                            intE+=intTmp.getPrenom()+" "+intTmp.getNom()+" - Entreprise : "+intTmp.getEntreprise()+",";
                        selectIntervenant.setModel(new javax.swing.DefaultComboBoxModel(intE.split(",")));
                    }
                })).start();
            }
        };
        jTable1.addMouseListener(MS2);
    }
}
